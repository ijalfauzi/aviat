.site-content {
    position: relative;

    @mixin atSmall {
        padding: 6.5rem 0;
    }

    &::before {
        position: absolute;
        content:url(https://ijalfauzi.github.io/aviat/assets/images/hero-section-background.webp);
        top: 0;
        left: 0;
    }

    h1 {
        font-size: 1.5rem;

        @mixin atSmall {
            font-size: 2rem;
        }
    }
    p.subtitle {
        font-size: 1.25rem;

        @mixin atSmall {
            font-size: 1.5rem;
        }
    }

    h1, p.subtitle {
        color: $mainRed;
    }
}

@media screen and (min-width: 768px) and (max-width: 1280px) {
    /* Top and bottom padding for large hero on medium screen */
    .site-content {
        padding: 4.5rem 0;
    }
    
    /* Reduce large hero background on medium screen */
    .site-content::before {
        top: -80px;
        left: -40px;
    }
}
  
  /* Timeline Container */
  .timeline {
    margin: 20px auto;
    padding: 20px;
    display: flex;
    align-items: center;
    flex-direction: column-reverse;
  }
  
  /* Card container */
  .card {
    position: relative;
    max-width: 680px;
  }
  
  /* setting padding based on even or odd */
  .card:nth-child(odd) {
    padding: 1.875rem 0 1.875rem 1.875rem;
  }
  .card:nth-child(even) {
    padding: 1.875rem 1.875rem 1.875rem 0;
  }
  /* Global ::before */
  .card::before {
    content: "";
    position: absolute;
    width: 50%;
    border: solid $mainRed;
  }
  
  /* Setting the border of top, bottom, left */
  .card:nth-child(odd)::before {
    left: 0px;
    top: -4.5px;
    bottom: -4.5px;
    border-width: 5px 0 5px 5px;
    border-radius: 50px 0 0 50px;
  }
  
  /* Setting the border of top, bottom, right */
  .card:nth-child(even)::before {
    right: 0;
    top: 0;
    bottom: 0;
    border-width: 5px 5px 5px 0;
    border-radius: 0 50px 50px 0;
  }
  
  /* Removing the border if it is the first card */
  .card:first-child::before {
    border-top: 0;
    border-top-left-radius: 0;
  }
  
  /* Removing the border if it is the last card  and it's odd */
  .card:last-child:nth-child(odd)::before {
    border-bottom: 0;
    border-bottom-left-radius: 0;
  }
  
  /* Removing the border if it is the last card  and it's even */
  .card:last-child:nth-child(even)::before {
    border-bottom: 0;
    border-bottom-right-radius: 0;
  }
  
  /* Information about the timeline */
  .info {
    display: flex;
    flex-direction: column;
    background: $mainList;
    border-radius: 30px;
    padding: 2rem;

    &--centered {
      text-align: center;
    }

    img {
      max-width: 100px;
      margin: 0 auto;
    }

    img.feature {
      margin: 0 1rem 1rem 0;
      float: left;
  }
  }
  
  /* Title of the card */
  .title {
    color: $mainRed;
    position: relative;
  }
  
  /* Timeline dot  */
  .title::before {
    content: "";
    position: absolute;
    width: 10px;
    height: 10px;
    background: white;
    border-radius: 999px;
    border: 3px solid $mainRed;
  }
  
  /* text right if the card is even  */
  .card:nth-child(even) > .info > .title {
    text-align: right;
  }
  
  /* setting dot to the left if the card is odd */
  .card:nth-child(odd) > .info > .title::before {
    left: -4.2rem;
  }
  
  /* setting dot to the right if the card is odd */
  .card:nth-child(even) > .info > .title::before {
    right: -4.2rem;
  }
  